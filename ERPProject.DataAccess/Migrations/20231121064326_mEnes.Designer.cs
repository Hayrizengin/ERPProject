// <auto-generated />
using System;
using ERPProject.DataAccess.Concrete.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPProject.DataAccess.Migrations
{
    [DbContext(typeof(ERPContext))]
    [Migration("20231121064326_mEnes")]
    partial class mEnes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPProject.Entity.Poco.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PriceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.InvoiceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("QuantityUnit")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDetail", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Offer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PriceStatus")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .IsFixedLength();

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.HasIndex("UserId");

                    b.ToTable("Offer", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AcceptedId")
                        .HasColumnType("bigint");

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("QuantityUnit")
                        .HasColumnType("smallint");

                    b.Property<short>("RequestStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AcceptedId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<short>("QuantityUnit")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.StockDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<long>("DelivererId")
                        .HasColumnType("bigint");

                    b.Property<string>("DelivererName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("RecieverId")
                        .HasColumnType("bigint");

                    b.Property<string>("RecieverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StockId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DelivererId");

                    b.HasIndex("StockId");

                    b.HasIndex("UserId");

                    b.ToTable("StockDetail", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.UserRole", b =>
                {
                    b.Property<long>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserRoleId"));

                    b.Property<string>("AddedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("AddedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("AddedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("AddedUser")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("UpdatedIPV4Address")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .HasColumnName("UpdatedIP4VAdress")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<long?>("UpdatedUser")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Department", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Department_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.InvoiceDetail", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceDetail_Invoice");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Offer", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Request", "Request")
                        .WithMany("Offers")
                        .HasForeignKey("RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_Offer_Request");

                    b.HasOne("ERPProject.Entity.Poco.User", "User")
                        .WithMany("Offers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Offer_User");

                    b.Navigation("Request");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Product", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Brand");

                    b.HasOne("ERPProject.Entity.Poco.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Request", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.User", "AcceptedUser")
                        .WithMany("AcceptedRequests")
                        .HasForeignKey("AcceptedId")
                        .HasConstraintName("FK_Request_AcceptedRequests");

                    b.HasOne("ERPProject.Entity.Poco.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPProject.Entity.Poco.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Request_User");

                    b.Navigation("AcceptedUser");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Stock", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Company", "Company")
                        .WithMany("Stocks")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Company");

                    b.HasOne("ERPProject.Entity.Poco.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Product");

                    b.Navigation("Company");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.StockDetail", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.User", "User")
                        .WithMany("StockDetailDeliverers")
                        .HasForeignKey("DelivererId")
                        .IsRequired()
                        .HasConstraintName("FK_StockDetail_User");

                    b.HasOne("ERPProject.Entity.Poco.Stock", "Stock")
                        .WithMany("StockDetails")
                        .HasForeignKey("StockId")
                        .IsRequired()
                        .HasConstraintName("FK_StockDetail_Stock");

                    b.HasOne("ERPProject.Entity.Poco.User", null)
                        .WithMany("StockDetailRecievers")
                        .HasForeignKey("UserId");

                    b.Navigation("Stock");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.User", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.UserRole", b =>
                {
                    b.HasOne("ERPProject.Entity.Poco.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPProject.Entity.Poco.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Company", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Product", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Request", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.Stock", b =>
                {
                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("ERPProject.Entity.Poco.User", b =>
                {
                    b.Navigation("AcceptedRequests");

                    b.Navigation("Offers");

                    b.Navigation("Requests");

                    b.Navigation("StockDetailDeliverers");

                    b.Navigation("StockDetailRecievers");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
